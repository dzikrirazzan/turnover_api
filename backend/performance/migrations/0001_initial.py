# Generated by Django 4.2.7 on 2025-06-28 09:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('predictions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='not_started', max_length=15)),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('due_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_goals', to='predictions.employee')),
            ],
        ),
        migrations.CreateModel(
            name='LearningModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('content_type', models.CharField(choices=[('micro-learning', 'Micro Learning'), ('article', 'Article'), ('course', 'Course'), ('video', 'Video')], max_length=20)),
                ('category', models.CharField(choices=[('leadership', 'Leadership'), ('technical', 'Technical Skills'), ('communication', 'Communication'), ('project_management', 'Project Management'), ('personal_development', 'Personal Development')], max_length=30)),
                ('duration_minutes', models.IntegerField()),
                ('url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('helpful_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shoutout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('values', models.JSONField(default=list)),
                ('likes_count', models.IntegerField(default=0)),
                ('is_public', models.BooleanField(default=True)),
                ('shared_to_slack', models.BooleanField(default=False)),
                ('shared_to_teams', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoutouts_given', to='predictions.employee')),
                ('to_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shoutouts_received', to='predictions.employee')),
                ('to_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predictions.department')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_period_start', models.DateField()),
                ('review_period_end', models.DateField()),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('self_assessment', 'Self Assessment'), ('peer_review', 'Peer Review'), ('manager_review', 'Manager Review'), ('calibration', 'Calibration'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('overall_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('self_assessment_progress', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('peer_reviews_received', models.IntegerField(default=0)),
                ('peer_reviews_target', models.IntegerField(default=5)),
                ('manager_review_completed', models.BooleanField(default=False)),
                ('calibration_completed', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='predictions.employee')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_conducted', to='predictions.employee')),
            ],
        ),
        migrations.CreateModel(
            name='OneOnOneMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=45)),
                ('topic', models.CharField(max_length=200)),
                ('agenda', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('upcoming', 'Upcoming'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=15)),
                ('satisfaction_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oneonone_meetings', to='predictions.employee')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oneonone_managed', to='predictions.employee')),
            ],
        ),
        migrations.CreateModel(
            name='LearningGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('target_value', models.IntegerField()),
                ('current_value', models.IntegerField(default=0)),
                ('unit', models.CharField(max_length=50)),
                ('week_start', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_goals', to='predictions.employee')),
            ],
        ),
        migrations.CreateModel(
            name='KeyResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_results', to='performance.goal')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('peer', 'Peer Review'), ('manager', 'Manager Review'), ('self', 'Self Assessment'), ('360', '360 Feedback')], max_length=10)),
                ('project', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_helpful', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_given', to='predictions.employee')),
                ('to_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_received', to='predictions.employee')),
            ],
        ),
        migrations.CreateModel(
            name='DashboardActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('related_object_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='predictions.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoutoutLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.employee')),
                ('shoutout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='performance.shoutout')),
            ],
            options={
                'unique_together': {('shoutout', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='LearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('time_spent_minutes', models.IntegerField(default=0)),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_helpful', models.BooleanField(default=False)),
                ('feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to='predictions.employee')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance.learningmodule')),
            ],
            options={
                'unique_together': {('employee', 'module')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('team_engagement', 'Team Engagement'), ('stress_level', 'Stress Level'), ('risk_score', 'Risk Score'), ('performance_score', 'Performance Score'), ('goal_completion', 'Goal Completion'), ('feedback_count', 'Feedback Count'), ('learning_hours', 'Learning Hours')], max_length=30)),
                ('value', models.FloatField()),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predictions.department')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_metrics', to='predictions.employee')),
            ],
            options={
                'unique_together': {('employee', 'department', 'metric_type', 'date')},
            },
        ),
    ]
