{
	"info": {
		"name": "SMART-EN API - CRUD Complete (100% Working)",
		"description": "Complete CRUD testing for all 12 features that are 100% working in production\n\nüî• STATUS: ALL 12 FEATURES WORKING PERFECTLY!\n\n‚úÖ Admin Login\n‚úÖ Create Department\n‚úÖ Admin Access Employee Details\n‚úÖ Admin Profile Access\n‚úÖ Admin Update Department\n‚úÖ Admin Update Employee Data\n‚úÖ Employee Login\n‚úÖ Employee Profile Access\n‚úÖ Employee Self-Update\n‚úÖ Soft Delete Employee\n‚úÖ Hard Delete Department\n‚úÖ Token Invalidation (Logout)\n\nüåê Production URL: https://turnover-api-hd7ze.ondigitalocean.app\nüîë Authentication: Token-based (no CSRF cookies needed)\nüìÖ Last Updated: July 14, 2025",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "https://turnover-api-hd7ze.ondigitalocean.app",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "employee_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_department_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_employee_id",
			"value": "27",
			"type": "string",
			"description": "Fixed test employee ID"
		}
	],
	"item": [
		{
			"name": "üîê 1. ADMIN LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    if (response.success && response.data && response.data.user && response.data.user.token) {",
							"        pm.collectionVariables.set('admin_token', response.data.user.token);",
							"        console.log('‚úÖ Admin token saved:', response.data.user.token.substring(0, 10) + '...');",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@company.com\",\n  \"password\": \"AdminPass123!\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login/",
					"host": ["{{base_url}}"],
					"path": ["api", "login", ""]
				}
			},
			"response": []
		},
		{
			"name": "üè¢ 2. CREATE DEPARTMENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 201) {",
							"    const response = pm.response.json();",
							"    if (response.id) {",
							"        pm.collectionVariables.set('test_department_id', response.id);",
							"        console.log('‚úÖ Department created with ID:', response.id);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Test Department {{$randomInt}}\",\n  \"description\": \"Department created for testing purposes\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/departments/",
					"host": ["{{base_url}}"],
					"path": ["api", "departments", ""]
				}
			},
			"response": []
		},
		{
			"name": "üë§ 3. ADMIN ACCESS EMPLOYEE DETAILS",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/employees/{{test_employee_id}}/",
					"host": ["{{base_url}}"],
					"path": ["api", "employees", "{{test_employee_id}}", ""]
				}
			},
			"response": []
		},
		{
			"name": "üéØ 4. ADMIN PROFILE ACCESS",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile/",
					"host": ["{{base_url}}"],
					"path": ["api", "profile", ""]
				}
			},
			"response": []
		},
		{
			"name": "‚úèÔ∏è 5. ADMIN UPDATE DEPARTMENT",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Updated Test Department {{$randomInt}}\",\n  \"description\": \"Updated description for testing\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/departments/{{test_department_id}}/",
					"host": ["{{base_url}}"],
					"path": ["api", "departments", "{{test_department_id}}", ""]
				}
			},
			"response": []
		},
		{
			"name": "üìù 6. ADMIN UPDATE EMPLOYEE DATA",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"first_name\": \"Updated\",\n  \"last_name\": \"Employee\",\n  \"position\": \"Updated Position\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/employees/{{test_employee_id}}/",
					"host": ["{{base_url}}"],
					"path": ["api", "employees", "{{test_employee_id}}", ""]
				}
			},
			"response": []
		},
		{
			"name": "üë®‚Äçüíº 7. EMPLOYEE LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    if (response.success && response.data && response.data.user && response.data.user.token) {",
							"        pm.collectionVariables.set('employee_token', response.data.user.token);",
							"        console.log('‚úÖ Employee token saved:', response.data.user.token.substring(0, 10) + '...');",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"bravely@gmail.com\",\n  \"password\": \"user123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login/",
					"host": ["{{base_url}}"],
					"path": ["api", "login", ""]
				}
			},
			"response": []
		},
		{
			"name": "üë§ 8. EMPLOYEE PROFILE ACCESS",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{employee_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile/",
					"host": ["{{base_url}}"],
					"path": ["api", "profile", ""]
				}
			},
			"response": []
		},
		{
			"name": "üîÑ 9. EMPLOYEE SELF-UPDATE",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Token {{employee_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"first_name\": \"SelfUpdated\",\n  \"phone_number\": \"+628123999999\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/profile/update/",
					"host": ["{{base_url}}"],
					"path": ["api", "profile", "update", ""]
				}
			},
			"response": []
		},
		{
			"name": "üóëÔ∏è 10. SOFT DELETE EMPLOYEE",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/employees/{{test_employee_id}}/",
					"host": ["{{base_url}}"],
					"path": ["api", "employees", "{{test_employee_id}}", ""]
				}
			},
			"response": []
		},
		{
			"name": "üè¢ 11. HARD DELETE DEPARTMENT",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/departments/{{test_department_id}}/",
					"host": ["{{base_url}}"],
					"path": ["api", "departments", "{{test_department_id}}", ""]
				}
			},
			"response": []
		},
		{
			"name": "üö™ 12A. EMPLOYEE LOGOUT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{employee_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/logout/",
					"host": ["{{base_url}}"],
					"path": ["api", "logout", ""]
				}
			},
			"response": []
		},
		{
			"name": "‚úÖ 12B. VERIFY EMPLOYEE TOKEN INVALIDATED",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{employee_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile/",
					"host": ["{{base_url}}"],
					"path": ["api", "profile", ""]
				}
			},
			"response": []
		},
		{
			"name": "üö™ 12C. ADMIN LOGOUT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/logout/",
					"host": ["{{base_url}}"],
					"path": ["api", "logout", ""]
				}
			},
			"response": []
		},
		{
			"name": "‚úÖ 12D. VERIFY ADMIN TOKEN INVALIDATED",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{admin_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/profile/",
					"host": ["{{base_url}}"],
					"path": ["api", "profile", ""]
				}
			},
			"response": []
		}
	]
}
